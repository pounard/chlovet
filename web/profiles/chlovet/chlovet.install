<?php
/**
 * @file
 * Installation procedure.
 *
 * Please keep this file to the bare minimum, almost everything can be
 * installed within modules and should not get in here.
 */

/**
 * Implements hook_install().
 */
function chlovet_install() {

  db_update('system')
    ->fields(['status' => 1])
    ->condition('type', 'theme')
    ->condition('name', ['bootbase', 'badm', 'vetbase', 'vetadmin'])
    ->execute()
  ;

  chlovet_install_french();
  chlovet_install_ckeditor();
}

/**
 * Main CKEditor configuration function.
 */
function chlovet_install_ckeditor() {

  // Just in case, but profile must have done it...
  module_enable(['ckeditor']);

  db_delete('ckeditor_settings')->execute();
  db_delete('ckeditor_input_format')->execute();

  $settings = array(
    'skin' => 'bootstrapck',
    'ckeditor_path' => '%m/ckeditor/ckeditor',
    'ckeditor_local_path' => '',
    'ckeditor_plugins_path' => '%m/plugins',
    'ckeditor_plugins_local_path' => '',
    'ckfinder_path' => '%m/ckfinder',
    'ckfinder_local_path' => '',
    'ckeditor_aggregate' => 'f',
    'toolbar_wizard' => 't',
    'loadPlugins' => array(),
  );

  db_merge('ckeditor_settings')->key(['name' => 'CKEditor Global Profile'])->fields(['settings' => serialize($settings)])->execute();

  $settings = array(
    'ss' => '2',
    'toolbar' => '[
      [\'Maximize\', \'ShowBlocks\', \'Source\'],
      [\'Undo\',\'Redo\'],
      [\'Cut\',\'Copy\',\'PasteFromWord\'],
      [\'JustifyLeft\',\'JustifyCenter\',\'JustifyRight\',\'JustifyBlock\'],
      [\'Blockquote\',\'HorizontalRule\',\'SpecialChar\'],
      \'/\',
      [\'Format\'],
      [\'Bold\',\'Italic\',\'Underline\',\'Strike\',\'-\',\'Styles\',\'RemoveFormat\'],
      [\'ulink\',\'Unlink\',\'Anchor\',\'Picto\'],
      [\'NumberedList\',\'BulletedList\',\'-\',\'Outdent\',\'Indent\']
  ]',
    'expand' => 't',
    'default' => 't',
    'show_toggle' => 'f',
    'uicolor' => 'default',
    'uicolor_user' => 'default',
    'width' => '100%',
    'lang' => 'fr',
    'auto_lang' => 't',
    'language_direction' => 'default',
    'allowed_content' => 't',
    'extraAllowedContent' => 'div[*];img{width,height}[style,src,srcset,media,sizes];picture{width,height}[style];source[src,srcset,media,sizes];span(icon,icon-*);',
    'enter_mode' => 'p',
    'shift_enter_mode' => 'br',
    'font_format' => 'p;pre;h2;h3;h4;h5;h6',
    'custom_formatting' => 'f',
    'formatting' => array(
      'custom_formatting_options' => array(
        'indent' => 'indent',
        'breakBeforeOpen' => 'breakBeforeOpen',
        'breakAfterOpen' => 'breakAfterOpen',
        'breakAfterClose' => 'breakAfterClose',
        'breakBeforeClose' => 0,
        'pre_indent' => 0,
      ),
    ),
    'css_mode' => 'none',
    'css_path' => '',
    'css_style' => 'theme',
    'styles_path' => '',
    'filebrowser' => 'none',
    'filebrowser_image' => '',
    'filebrowser_flash' => '',
    'UserFilesPath' => '%b%f/',
    'UserFilesAbsolutePath' => '%d%b%f/',
    'forcePasteAsPlainText' => 'f',
    'html_entities' => 'f',
    'scayt_autoStartup' => 'f',
    'theme_config_js' => 'f',
    'js_conf' => '',
    'loadPlugins' => array(
      'picto' => array(
        'name' => 'picto',
        'desc' => 'Pictogram insertion',
        'path' => '%base_path%profiles/dsf/modules/hsm_content/js/ckeditor/',
        'buttons' => array(
          'picto' => array(
            'label' => 'Insert pictogram',
            'icon' => 'icons/picto.png',
          ),
        ),
      ),
      'ucmsmediadnd' => array(
        'name' => 'ucmsmediadnd',
        'desc' => 'UCMS medias drop & paste management',
        'path' => '%base_path%sites/all/modules/composer/drupal-ucms/ucms_contrib/js/ckeditor/',
      ),
      'ulink' => array(
        'name' => 'ulink',
        'desc' => 'µLink entity selector',
        'path' => '%base_path%sites/all/modules/composer/drupal-ulink/js/ckeditor/',
        'buttons' => array(
          'ulink' => array(
            'label' => 'Link content',
            'icon' => 'icons/ulink.png',
          ),
        ),
      ),
    ),
  );

  db_merge('ckeditor_settings')->key(['name' => 'Full'])->fields(['settings' => serialize($settings)])->execute();
  db_merge('ckeditor_input_format')->key(['name' => 'Full'])->fields(['format' => 'full_html'])->execute();
}

/**
 * Install french locale.
 */
function chlovet_install_french() {
  include_once DRUPAL_ROOT . '/includes/locale.inc';

  db_delete('languages')->condition('language', 'fr')->execute();
  locale_add_language('fr', 'French', 'Français', LANGUAGE_LTR, '', '', TRUE, TRUE);

  db_update('languages')
    ->fields(['enabled' => 0])
    ->condition('language', 'en')
    ->execute()
  ;

  variable_set('language_count', 1);
  // Changing the language settings impacts the interface.
  cache_clear_all('*', 'cache_page', TRUE);
  module_invoke_all('multilingual_settings_changed');
}

/**
 * Ensure install worked correctly.
 */
function chlovet_update_7001() {
  chlovet_install_french();
  chlovet_install_ckeditor();
}

/**
 * Enables the telephone module.
 */
function chlovet_update_7002() {
  module_enable(['telephone']);
}

/**
 * Houston, we changed node types.
 */
function chlovet_update_7003() {
  node_type_delete('list');
  node_type_delete('highlight');
}

/**
 * Removes the 'path' core module.
 */
function chlovet_update_7004() {
  module_disable(['path']);
  drupal_uninstall_modules(['path'], false);
}

/*
function chlovet_update_7006() {
  db_merge('block')
    ->key([
        'theme' => 'gipbe_theme',
        'module' => 'gibpe_block',
        'delta' => 'agenda',
    ])
    ->fields([
        'region' => 'content',
        'visibility' => 1,
        ''
    ])
    ->execute()
  ;

  db_delete('block_node_type')
    ->condition('module', 'gibpe_block')
    ->condition('delta', 'agenda')
    ->condition('type', 'article')
    ->execute()
  ;

  db_merge('block_node_type')
    ->key([
        'module' => 'gibpe_block',
        'delta' => 'agenda',
        'type' => 'event',
    ])
    ->fields([])
    ->execute()
  ;
}

function ruteoiteroitue() {
$blocks = array (
  0 =>
  array (
    'bid' => '4232',
    'module' => 'block',
    'delta' => '3',
    'theme' => 'laborange2',
    'status' => '0',
    'weight' => '0',
    'region' => '-1',
    'custom' => '0',
    'visibility' => '0',
    'pages' => '',
    'title' => '',
    'cache' => '-1',
  ),
  1 =>
  array (
    'bid' => '4233',
    'module' => 'block',
    'delta' => '4',
    'theme' => 'laborange2',
    'status' => '1',
    'weight' => '10',
    'region' => 'content_2',
    'custom' => '0',
    'visibility' => '1',
    'pages' => 'webzine
webzine/*
rubricage
rubricage/*',
    'title' => 'Participez au webzine',
    'cache' => '-1',
  ),
  2 =>
  array (
    'bid' => '4234',
    'module' => 'comment',
    'delta' => 'recent',
    'theme' => 'laborange2',
    'status' => '0',
    'weight' => '0',
    'region' => '-1',
    'custom' => '0',
    'visibility' => '0',
    'pages' => '',
    'title' => '',
    'cache' => '1',
  ));

  db_delete('block')->execute();
  foreach ($blocks as $block) {
  db_merge('block')
    ->key([
        'theme' => $block['theme'],
        'module' => $block['module'],
        'delta' => $block['delta'],
    ])
    ->fields($block)
    ->execute()
  ;

  }
}
 */

/**
 * Updates migrated layout data.
 */
function chlovet_update_7005() {
  if (!db_table_exists('layout')) {
    drupal_set_message("You must manually enable 'ucms_composition' and run its migration script prior to running this update", 'error');
    drupal_set_message('Please run: bin/console -vvv ucms:composition:migate --region-as-style --squash="(content front1 front2 front3 front4) (footer footer1 footer2 footer3 footer4)"', 'error');
    die();
  }
  db_query("update layout_data set style = 'front' where style in ('front1', 'front2', 'front3', 'front4')");
  db_query("update layout_data set style = 'square' where style in ('banner_right')");
}

/**
 * Drops all layout that don't belong to the 'content' region.
 */
function chlovet_update_7006() {
  db_query("delete from layout where region <> 'content'");
}

/**
 * Drops a few useless module.
 */
function chlovet_update_7007() {
  db_query("delete from system where name in ('ucms_notification', 'apb', 'notification')");
}
